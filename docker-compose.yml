# docker-compose.yml
version: '3.8'

services:
  # Serviço da API Node.js
  api:
    build: . # Constrói a imagem a partir do Dockerfile na pasta atual
    container_name: minha_api
    ports:
      - "3000:3000" # Mapeia a porta 3000 do container para a 3000 da sua máquina
    volumes:
      - ./src:/usr/src/app/src # Monta a pasta src local para live-reload com nodemon
    env_file:
      - .env # Carrega as variáveis de ambiente do arquivo .env
    depends_on:
      - db # Garante que o container do banco de dados inicie antes da API
    restart: unless-stopped

  # Serviço do Banco de Dados PostgreSQL
  db:
    image: postgres:15-alpine # Usa uma imagem oficial e leve do Postgres
    container_name: postgres_db
    ports:
      - "5432:5432" # Mapeia a porta do Postgres para sua máquina (útil para debug)
    environment:
      POSTGRES_USER: ${POSTGRES_USER} # Usa as variáveis do arquivo .env
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data # Persiste os dados do banco
    restart: unless-stopped

volumes:
  postgres_data: # Define o volume nomeado para persistência