// prisma/schema.prisma

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// Enum para os status do pedido
enum StatusPedido {
  AGUARDANDO_PAGAMENTO
  FALHA_NO_PAGAMENTO
  PAGO
  CANCELADO
}

model Cliente {
  id       Int      @id @default(autoincrement())
  nome     String
  email    String   @unique
  pedidos  Pedido[]
  criadoEm DateTime @default(now())
}

model Produto {
  id           Int                 @id @default(autoincrement())
  nome         String              @unique
  descricao    String?
  preco        Float
  estoque      Int                 @default(0)
  pedidos      ProdutosEmPedidos[]
  criadoEm     DateTime            @default(now())
  atualizadoEm DateTime            @updatedAt
}

model Pedido {
  id            Int                 @id @default(autoincrement())
  clienteId     Int
  cliente       Cliente             @relation(fields: [clienteId], references: [id])
  total         Float
  status        StatusPedido        @default(AGUARDANDO_PAGAMENTO)
  produtos      ProdutosEmPedidos[]
  pagamentos    Pagamento[]
  criadoEm      DateTime            @default(now())
  atualizadoEm  DateTime            @updatedAt
}

model ProdutosEmPedidos {
  pedido     Pedido  @relation(fields: [pedidoId], references: [id])
  pedidoId   Int
  produto    Produto @relation(fields: [produtoId], references: [id])
  produtoId  Int
  quantidade Int

  @@id([pedidoId, produtoId])
}

model Pagamento {
  id              Int      @id @default(autoincrement())
  pedidoId        Int
  pedido          Pedido   @relation(fields: [pedidoId], references: [id])
  metodoPagamento String // Ex: "Cartão de Crédito", "PIX"
  valor           Float
  sucesso         Boolean
  criadoEm        DateTime @default(now())
}
